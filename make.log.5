makehead.inc:47: default goal is grmhd
makehead.inc:48: goal is 
makehead.inc:49: MPITARGETS is  grmhd grmhdldouble liaison prep prepgrmhdldouble 
makehead.inc:79: USEMPI is 1
maketail.inc:49: COMP is icc -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1
maketail.inc:50: MMCOMP is mpicc -cc=icc -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1   
maketail.inc:51: CC is mpicc -cc=icc -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1   
maketail.inc:52: CC2 is mpicc -cc=gcc -Wall -O2 -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1
maketail.inc:53: CCGENERATEFINAL is mpicc -cc=icc -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1   
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c init.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c init.tools.c -lm -lmkl_lapack -lmkl -lguide -lpthread
init.tools.c(525): (col. 5) remark: BLOCK WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c initbase.c -lm -lmkl_lapack -lmkl -lguide -lpthread
initbase.c(2524): (col. 4) remark: LOOP WAS VECTORIZED.
initbase.c(2484): (col. 3) remark: LOOP WAS VECTORIZED.
initbase.c(68): (col. 5) remark: LOOP WAS VECTORIZED.
initbase.c(892): (col. 7) remark: LOOP WAS VECTORIZED.
initbase.c(897): (col. 2) remark: LOOP WAS VECTORIZED.
initbase.c(898): (col. 20) remark: LOOP WAS VECTORIZED.
initbase.c(903): (col. 5) remark: LOOP WAS VECTORIZED.
initbase.c(905): (col. 36) remark: LOOP WAS VECTORIZED.
initbase.c(920): (col. 15) remark: LOOP WAS VECTORIZED.
initbase.c(923): (col. 26) remark: LOOP WAS VECTORIZED.
initbase.c(1092): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c initbase.boundloop.c -lm -lmkl_lapack -lmkl -lguide -lpthread
initbase.boundloop.c(454): (col. 3) remark: BLOCK WAS VECTORIZED.
initbase.boundloop.c(155): (col. 3) remark: BLOCK WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c initbase.enerregions.c -lm -lmkl_lapack -lmkl -lguide -lpthread
initbase.enerregions.c(121): (col. 5) remark: LOOP WAS VECTORIZED.
initbase.enerregions.c(133): (col. 3) remark: BLOCK WAS VECTORIZED.
initbase.enerregions.c(138): (col. 3) remark: BLOCK WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c initbase.tools.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c initbase.gridsectioning.c -lm -lmkl_lapack -lmkl -lguide -lpthread
initbase.gridsectioning.c(117): remark #111: statement is unreachable
    dualfprintf(fail_file,"Should not be in bound_gridsectioning EVER: deprecated code\n");
    ^

mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c restart.c -lm -lmkl_lapack -lmkl -lguide -lpthread
restart.rebeccaoldcode.c(431): (col. 5) remark: LOOP WAS VECTORIZED.
restart.rebeccaoldcode.c(437): (col. 18) remark: LOOP WAS VECTORIZED.
restart.c(825): (col. 5) remark: LOOP WAS VECTORIZED.
restart.c(828): (col. 43) remark: LOOP WAS VECTORIZED.
restart.c(831): (col. 18) remark: LOOP WAS VECTORIZED.
restart.rebeccaoldcode.c(156): (col. 41) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c restart.checks.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c set_arrays.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c set_arrays_perpoint_perline.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c set_arrays_multidimen.c -lm -lmkl_lapack -lmkl -lguide -lpthread
set_arrays_multidimen.c(79): warning #175: subscript out of range
    GLOBALPOINT(fluxstate) = (struct of_state PTRMACP2A0(fluxstate,FILL,NUMLEFTRIGHT,N1M,N2M,N3M)) (&(BASEMACP2A0(fluxstate,-1,0,N1BND,N2BND,N3BND)));
                                                                                                      ^

set_arrays_multidimen.c(145): warning #175: subscript out of range
    GLOBALPOINT(vconemf) = (FTYPE PTRMACP0A1(vconemf,N1M,N2M,N3M,NDIM-1)) (&(BASEMACP0A1(vconemf,N1BND,N2BND,N3BND,-U1)));
                                                                             ^

set_arrays_multidimen.c(168): warning #175: subscript out of range
    GLOBALPOINT(wspeed) = (FTYPE PTRMACP2A0(wspeed,FILL,NUMCS,N1M,N2M,N3M)) (&(BASEMACP2A0(wspeed,-1,0,N1BND,N2BND,N3BND))); // shifted so wspeed[1,2,3] accesses the memory
                                                                               ^

set_arrays_multidimen.c(252): warning #175: subscript out of range
    GLOBALPOINT(gp_l) = (FTYPE PTRMACP1A1(gp_l,FILL,N1M,N2M,N3M,NPR2INTERP)) (&(BASEMACP1A1(gp_l,-1,N1BND,N2BND,N3BND,0)));
                                                                                ^

set_arrays_multidimen.c(253): warning #175: subscript out of range
    GLOBALPOINT(gp_r) = (FTYPE PTRMACP1A1(gp_r,FILL,N1M,N2M,N3M,NPR2INTERP)) (&(BASEMACP1A1(gp_r,-1,N1BND,N2BND,N3BND,0)));
                                                                                ^

set_arrays_multidimen.c(283): warning #175: subscript out of range
    GLOBALPOINT(pbcorninterp) = (FTYPE PTRMACP3A0(pbcorninterp,FILL,COMPDIM,NUMCS,N1M+SHIFT1,N2M+SHIFT2,N3M+SHIFT3)) (&(BASEMACP3A0(pbcorninterp,-1,-B1,0,N1BND,N2BND,N3BND)));
                                                                                                                        ^

set_arrays_multidimen.c(283): warning #175: subscript out of range
    GLOBALPOINT(pbcorninterp) = (FTYPE PTRMACP3A0(pbcorninterp,FILL,COMPDIM,NUMCS,N1M+SHIFT1,N2M+SHIFT2,N3M+SHIFT3)) (&(BASEMACP3A0(pbcorninterp,-1,-B1,0,N1BND,N2BND,N3BND)));
                                                                                                                        ^

set_arrays_multidimen.c(284): warning #175: subscript out of range
    GLOBALPOINT(pvcorninterp) = (FTYPE PTRMACP4A0(pvcorninterp,FILL,COMPDIM,NUMCS,NUMCS,N1M+SHIFT1,N2M+SHIFT2,N3M+SHIFT3)) (&(BASEMACP4A0(pvcorninterp,-1,-U1,0,0,N1BND,N2BND,N3BND)));
                                                                                                                              ^

set_arrays_multidimen.c(284): warning #175: subscript out of range
    GLOBALPOINT(pvcorninterp) = (FTYPE PTRMACP4A0(pvcorninterp,FILL,COMPDIM,NUMCS,NUMCS,N1M+SHIFT1,N2M+SHIFT2,N3M+SHIFT3)) (&(BASEMACP4A0(pvcorninterp,-1,-U1,0,0,N1BND,N2BND,N3BND)));
                                                                                                                              ^

set_arrays_multidimen.c(286): warning #175: subscript out of range
    GLOBALPOINT(geomcornglobal) = (FTYPE PTRMACP1A0(geomcornglobal,FILL,N1M+SHIFT1,N2M+SHIFT2,N3M+SHIFT3)) (&(BASEMACP1A0(geomcornglobal,-1,N1BND,N2BND,N3BND))); // geomcornglobal[1,2,3 for CORN1,2,3]
                                                                                                              ^

set_arrays_multidimen.c(140): (col. 23) remark: LOOP WAS VECTORIZED.
set_arrays_multidimen.c(146): (col. 3) remark: LOOP WAS VECTORIZED.
set_arrays_multidimen.c(169): (col. 22) remark: LOOP WAS VECTORIZED.
set_arrays_multidimen.c(305): (col. 3) remark: LOOP WAS VECTORIZED.
set_arrays_multidimen.c(309): (col. 5) remark: LOOP WAS VECTORIZED.
set_arrays_multidimen.c(310): (col. 5) remark: LOOP WAS VECTORIZED.
set_arrays_multidimen.c(388): (col. 3) remark: LOOP WAS VECTORIZED.
set_arrays_multidimen.c(393): (col. 3) remark: LOOP WAS VECTORIZED.
set_arrays_multidimen.c(416): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c mpi_set_arrays.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpi_set_arrays.c(31): warning #175: subscript out of range
    workbc = (FTYPE(*)[COMPDIM * 2][NMAXBOUND * NBIGBND * NBIGSM]) (&(workbca[-1][0][0]));
                                                                             ^

mpi_set_arrays.c(33): warning #175: subscript out of range
    workbc_int =(PFTYPE(*)[COMPDIM * 2][NUMPFLAGSBOUND * NBIGBND * NBIGSM]) (&(workbc_inta[-1][0][0]));
                                                                                          ^

mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c set_grid.c -lm -lmkl_lapack -lmkl -lguide -lpthread
set_grid.c(402): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c advance.c -lm -lmkl_lapack -lmkl -lguide -lpthread
advance.c(279): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){
           ^

advance.c(321): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dt!=0.0){
             ^

advance.c(380): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){
           ^

advance.c(400): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){
           ^

advance.c(446): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dt!=0.0){
             ^

advance.c(493): remark #1572: floating-point equality and inequality comparisons are unreliable
        if(dt!=0.0){
               ^

advance.c(884): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){
           ^

advance.c(916): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){
           ^

advance.c(938): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){
           ^

advance.c(961): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){
           ^

advance.c(1051): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dt!=0.0){
             ^

advance.c(1345): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){
           ^

advance.c(1773): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( 0.0 != fraction_input_value ){
               ^

advance.c(2217): (col. 7) remark: LOOP WAS VECTORIZED.
advance.c(635): (col. 7) remark: LOOP WAS VECTORIZED.
advance.c(2602): (col. 3) remark: LOOP WAS VECTORIZED.
advance.c(1011): (col. 7) remark: LOOP WAS VECTORIZED.
advance.c(1012): (col. 7) remark: LOOP WAS VECTORIZED.
advance.c(1013): (col. 7) remark: LOOP WAS VECTORIZED.
advance.c(1191): (col. 5) remark: LOOP WAS VECTORIZED.
advance.c(1192): (col. 5) remark: LOOP WAS VECTORIZED.
advance.c(1193): (col. 5) remark: LOOP WAS VECTORIZED.
advance.c(1245): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c reconstructeno.c -lm -lmkl_lapack -lmkl -lguide -lpthread
reconstructeno.c(585): remark #1572: floating-point equality and inequality comparisons are unreliable
          if( monoind_val == 0.0 ) {
                             ^

reconstructeno.c(849): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( order == 3 && monoindicator[0] > 0.0 && monoindicator[0] < 1.0 ){ 
                 ^

reconstructeno.c(930): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( stencil_weights[shift] != 0.0 ) {  //SASMARK: if values just outside the boundary are NAN's, then zero time NAN gives a NAN, and the code fails, so use isfinite() or != 0.0 to check for that.
                                    ^

reconstructeno.c(1420): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(*monoindicator0==1){// then equal weights
                        ^

reconstructeno.c(1437): remark #1572: floating-point equality and inequality comparisons are unreliable
    else if(*monoindicator0==0 && *monoindicator1!=0) { //cusp
                             ^

reconstructeno.c(1437): remark #1572: floating-point equality and inequality comparisons are unreliable
    else if(*monoindicator0==0 && *monoindicator1!=0) { //cusp
                                                   ^

reconstructeno.c(1594): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(monoindicator[0]==1){// then equal weights
                         ^

reconstructeno.c(1599): remark #1572: floating-point equality and inequality comparisons are unreliable
    else if(monoindicator[0]==-1){// then 0 weight
                              ^

reconstructeno.c(1741): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(*monoindicator0==1){// then equal weights
                        ^

reconstructeno.c(1749): remark #1572: floating-point equality and inequality comparisons are unreliable
    else if(*monoindicator0==0 && *monoindicator1!=0) { //cusp
                             ^

reconstructeno.c(1749): remark #1572: floating-point equality and inequality comparisons are unreliable
    else if(*monoindicator0==0 && *monoindicator1!=0) { //cusp
                                                   ^

reconstructeno.c(1947): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(monoindicator[0]==1){// then equal weights
                         ^

reconstructeno.c(1950): remark #1572: floating-point equality and inequality comparisons are unreliable
    else if(monoindicator[0]==-1){// then 0 weight
                              ^

reconstructeno.c(2166): remark #1572: floating-point equality and inequality comparisons are unreliable
         (sign(ddf[-1])==-sign(ddf[0]))&&
                         ^

reconstructeno.c(2167): remark #1572: floating-point equality and inequality comparisons are unreliable
         (sign(ddf[1])==-sign(ddf[0]))&&
                        ^

reconstructeno.c(2168): remark #1572: floating-point equality and inequality comparisons are unreliable
         (sign(ddf[-1])==sign(ddf[1]))&&
                         ^

reconstructeno.c(2169): remark #1572: floating-point equality and inequality comparisons are unreliable
         (sign(df[-1])==-sign(df[1]))
                        ^

reconstructeno.weightmin.c(1210): remark #111: statement is unreachable
    copy_weno5_weights(preforder, weno_weights_in, stencil_weights_array_other);
    ^

reconstructeno.debug.c(19): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( (pl < U1 && yin[i+bs] != yin[bf-i]) || (pl == U1 && yin[i+bs] != - yin[bf-i]) ) {
                                   ^

reconstructeno.debug.c(19): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( (pl < U1 && yin[i+bs] != yin[bf-i]) || (pl == U1 && yin[i+bs] != - yin[bf-i]) ) {
                                                                           ^

reconstructeno.debug.c(48): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( stencil_weights_array[i+ps].weights[j] != stencil_weights_array[pf-i].weights[maxorder-1-j] ) {
  	                                              ^

reconstructeno.debug.c(54): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( stencil_weights_array[i+ps].weights[j+maxorder] != stencil_weights_array[pf-i].weights[maxorder + maxorder-1-j] ) {
  	                                                       ^

reconstructeno.debug.c(63): remark #1572: floating-point equality and inequality comparisons are unreliable
        if( (pl < U1 && yout[0][i+ps] != yout[0][pf-i]) || (pl == U1 && yout[0][i+ps] != - yout[0][pf-i]) ) {
                                         ^

reconstructeno.debug.c(63): remark #1572: floating-point equality and inequality comparisons are unreliable
        if( (pl < U1 && yout[0][i+ps] != yout[0][pf-i]) || (pl == U1 && yout[0][i+ps] != - yout[0][pf-i]) ) {
                                                                                         ^

reconstructeno.debug.c(76): remark #1572: floating-point equality and inequality comparisons are unreliable
  	 (pl < U1 && yout[0][i+ps] != yout[1][pf-i]) || 
  	                              ^

reconstructeno.debug.c(77): remark #1572: floating-point equality and inequality comparisons are unreliable
  	 (pl == U1 && yout[0][i+ps] != - yout[1][pf-i]) ) {
  	                               ^

reconstructeno.debug.c(81): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  if( stencil_weights_array[i+ps].weights[j] != stencil_weights_array[pf-i].weights[maxorder-1-j] ) {
  	                                                ^

reconstructeno.debug.c(87): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  if( stencil_weights_array[i+ps].weights[j+maxorder] != stencil_weights_array[pf-i].weights[maxorder + 2*maxorder-1-j] ) {
  	                                                         ^

reconstructeno.debug.c(98): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( stencil_weights_array[i+ps].weights[j] != stencil_weights_array[pf-i].weights[maxorder-1-j] || monoindicator[MONOYIN][i+ps] != monoindicator[MONOYIN][pf-i] ) {
  	                                              ^

reconstructeno.debug.c(98): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( stencil_weights_array[i+ps].weights[j] != stencil_weights_array[pf-i].weights[maxorder-1-j] || monoindicator[MONOYIN][i+ps] != monoindicator[MONOYIN][pf-i] ) {
  	                                                                                                                                   ^

reconstructeno.debug.c(104): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( stencil_weights_array[i+ps].weights[j+maxorder] != stencil_weights_array[pf-i].weights[maxorder + 2*maxorder-1-j] && monoindicator[MONOYIN][i+ps] != 1.0 ) {
  	                                                       ^

reconstructeno.debug.c(104): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( stencil_weights_array[i+ps].weights[j+maxorder] != stencil_weights_array[pf-i].weights[maxorder + 2*maxorder-1-j] && monoindicator[MONOYIN][i+ps] != 1.0 ) {
  	                                                                                                                                                         ^

reconstructeno.c(1423): (col. 5) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1471): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1501): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1501): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1517): (col. 31) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1517): (col. 31) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1527): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1540): (col. 17) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1540): (col. 17) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1554): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1554): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1744): (col. 5) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1778): (col. 5) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1794): (col. 5) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1840): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1840): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1857): (col. 31) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1857): (col. 31) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1868): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1882): (col. 17) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1882): (col. 17) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1895): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1895): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1624): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1635): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1641): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1641): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1642): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1642): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1644): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1959): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1966): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1966): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1967): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1967): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(194): (col. 2) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(232): (col. 2) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(269): (col. 2) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(315): (col. 2) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(330): (col. 4) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(1117): (col. 5) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(1142): (col. 5) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(748): (col. 19) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(722): (col. 5) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(821): (col. 19) remark: LOOP WAS VECTORIZED.
reconstructeno.c(237): (col. 9) remark: PARTIAL LOOP WAS VECTORIZED.
reconstructeno.c(237): (col. 9) remark: LOOP WAS VECTORIZED.
reconstructeno.c(237): (col. 9) remark: LOOP WAS VECTORIZED.
reconstructeno.c(152): (col. 9) remark: PARTIAL LOOP WAS VECTORIZED.
reconstructeno.c(152): (col. 9) remark: LOOP WAS VECTORIZED.
reconstructeno.c(152): (col. 9) remark: LOOP WAS VECTORIZED.
reconstructeno.c(285): (col. 10) remark: PARTIAL LOOP WAS VECTORIZED.
reconstructeno.c(285): (col. 10) remark: LOOP WAS VECTORIZED.
reconstructeno.c(285): (col. 10) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(901): (col. 5) remark: LOOP WAS VECTORIZED.
reconstructeno.weightmin.c(1027): (col. 5) remark: LOOP WAS VECTORIZED.
reconstructeno.c(2828): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1166): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
reconstructeno.c(1166): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1166): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1166): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1167): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
reconstructeno.c(1167): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1167): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1167): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1045): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1054): (col. 9) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1080): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1080): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1071): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(1071): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(983): (col. 3) remark: LOOP WAS VECTORIZED.
reconstructeno.c(983): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c paraenohybrid.c -lm -lmkl_lapack -lmkl -lguide -lpthread
paraenohybrid.c(79): remark #1572: floating-point equality and inequality comparisons are unreliable
        if(monoindicator[LEFTYOUT][i]==0.0) yout_left[i]=0.0;
                                       ^

paraenohybrid.c(80): remark #1572: floating-point equality and inequality comparisons are unreliable
        if(monoindicator[RIGHTYOUT][i]==0.0) yout_right[i]=0.0;
                                        ^

mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c flux.c -lm -lmkl_lapack -lmkl -lguide -lpthread
flux.c(900): (col. 7) remark: LOOP WAS VECTORIZED.
flux.c(1298): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c flux.mergedc2ea2cmethod.c -lm -lmkl_lapack -lmkl -lguide -lpthread
flux.mergedc2ea2cmethod.c(182): (col. 3) remark: BLOCK WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c higherorder_pointavg.c -lm -lmkl_lapack -lmkl -lguide -lpthread
higherorder_pointavg.c(2247): (col. 7) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2357): (col. 3) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2357): (col. 3) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2357): (col. 3) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2281): (col. 2) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2284): (col. 2) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2287): (col. 2) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1890): (col. 5) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1891): (col. 5) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2587): (col. 3) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1952): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
higherorder_pointavg.c(1325): (col. 5) remark: BLOCK WAS VECTORIZED.
higherorder_pointavg.c(1765): (col. 2) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1766): (col. 2) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1817): (col. 39) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1817): (col. 39) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1817): (col. 39) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1059): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1060): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2432): (col. 26) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2432): (col. 26) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2432): (col. 26) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2056): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
higherorder_pointavg.c(791): (col. 3) remark: BLOCK WAS VECTORIZED.
higherorder_pointavg.c(838): (col. 2) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(839): (col. 2) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(879): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(879): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(879): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(941): (col. 3) remark: BLOCK WAS VECTORIZED.
higherorder_pointavg.c(941): (col. 3) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(941): (col. 3) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(941): (col. 3) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(941): (col. 3) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(941): (col. 3) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(578): (col. 3) remark: BLOCK WAS VECTORIZED.
higherorder_pointavg.c(618): (col. 2) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(619): (col. 2) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(650): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(650): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(650): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(263): (col. 5) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(264): (col. 5) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(461): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(461): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(461): (col. 4) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(45): (col. 3) remark: BLOCK WAS VECTORIZED.
higherorder_pointavg.c(709): (col. 22) remark: BLOCK WAS VECTORIZED.
higherorder_pointavg.c(709): (col. 22) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(709): (col. 22) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(709): (col. 22) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(709): (col. 22) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(709): (col. 22) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1571): (col. 7) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(1572): (col. 7) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2149): (col. 5) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2150): (col. 5) remark: LOOP WAS VECTORIZED.
higherorder_pointavg.c(2151): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c wavespeeds.c -lm -lmkl_lapack -lmkl -lguide -lpthread
wavespeeds.c(216): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c boundsflux.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c fluxct.c -lm -lmkl_lapack -lmkl -lguide -lpthread
fluxct.c(468): warning #175: subscript out of range
  	MACP0A1(pb,i  ,jm1mac(j),k  ,B3)*MACP0A1(vconemf,i  ,jm1mac(j),k  ,U2) -
  	                                 ^

fluxct.c(469): warning #175: subscript out of range
  	MACP0A1(pb,i  ,jm1mac(j),k  ,B2)*MACP0A1(vconemf,i  ,jm1mac(j),k  ,U3) ;
  	                                 ^

fluxct.c(471): warning #175: subscript out of range
  	MACP0A1(pb,i  ,jm1mac(j),km1mac(k),B3)*MACP0A1(vconemf,i  ,jm1mac(j),km1mac(k),U2) -
  	                                       ^

fluxct.c(472): warning #175: subscript out of range
  	MACP0A1(pb,i  ,jm1mac(j),km1mac(k),B2)*MACP0A1(vconemf,i  ,jm1mac(j),km1mac(k),U3) ;
  	                                       ^

fluxct.c(474): warning #175: subscript out of range
  	MACP0A1(pb,i  ,j  ,km1mac(k),B3)*MACP0A1(vconemf,i  ,j  ,km1mac(k),U2) -
  	                                 ^

fluxct.c(475): warning #175: subscript out of range
  	MACP0A1(pb,i  ,j  ,km1mac(k),B2)*MACP0A1(vconemf,i  ,j  ,km1mac(k),U3) ;
  	                                 ^

fluxct.c(477): warning #175: subscript out of range
  	MACP0A1(pb,i  ,j  ,k  ,B3)*MACP0A1(vconemf,i  ,j  ,k  ,U2) -
  	                           ^

fluxct.c(478): warning #175: subscript out of range
  	MACP0A1(pb,i  ,j  ,k  ,B2)*MACP0A1(vconemf,i  ,j  ,k  ,U3) ;
  	                           ^

fluxct.c(484): warning #175: subscript out of range
  	MACP0A1(pb,im1mac(i),j  ,k  ,B1)*MACP0A1(vconemf,im1mac(i),j  ,k  ,U3) -
  	                                 ^

fluxct.c(487): warning #175: subscript out of range
  	MACP0A1(pb,im1mac(i),j  ,km1mac(k),B1)*MACP0A1(vconemf,im1mac(i),j  ,km1mac(k),U3) -
  	                                       ^

fluxct.c(490): warning #175: subscript out of range
  	MACP0A1(pb,i  ,j  ,km1mac(k),B1)*MACP0A1(vconemf,i  ,j  ,km1mac(k),U3) -
  	                                 ^

fluxct.c(493): warning #175: subscript out of range
  	MACP0A1(pb,i  ,j  ,k  ,B1)*MACP0A1(vconemf,i  ,j  ,k  ,U3) -
  	                           ^

fluxct.c(501): warning #175: subscript out of range
  	MACP0A1(pb,im1mac(i),j  ,k  ,B1)*MACP0A1(vconemf,im1mac(i),j  ,k  ,U2) ;
  	                                 ^

fluxct.c(504): warning #175: subscript out of range
  	MACP0A1(pb,im1mac(i),jm1mac(j),k  ,B1)*MACP0A1(vconemf,im1mac(i),jm1mac(j),k  ,U2) ;
  	                                       ^

fluxct.c(507): warning #175: subscript out of range
  	MACP0A1(pb,i  ,jm1mac(j),k  ,B1)*MACP0A1(vconemf,i  ,jm1mac(j),k  ,U2) ;
  	                                 ^

fluxct.c(510): warning #175: subscript out of range
  	MACP0A1(pb,i  ,j  ,k  ,B1)*MACP0A1(vconemf,i  ,j  ,k  ,U2) ;
  	                           ^

fluxct.c(210): (col. 7) remark: LOOP WAS VECTORIZED.
fluxct.c(374): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(383): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(392): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(279): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(297): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(315): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(513): (col. 7) remark: LOOP WAS VECTORIZED.
fluxct.c(533): (col. 7) remark: LOOP WAS VECTORIZED.
fluxct.c(927): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(944): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(960): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(870): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(885): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(903): (col. 5) remark: LOOP WAS VECTORIZED.
fluxct.c(47): (col. 3) remark: BLOCK WAS VECTORIZED.
fluxct.c(93): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
fluxct.c(107): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
fluxct.c(120): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c fluxctstag.c -lm -lmkl_lapack -lmkl -lguide -lpthread
fluxctstag.c(725): (col. 3) remark: BLOCK WAS VECTORIZED.
fluxctstag.c(1007): (col. 3) remark: LOOP WAS VECTORIZED.
fluxctstag.c(369): (col. 3) remark: BLOCK WAS VECTORIZED.
fluxctstag.c(425): (col. 28) remark: LOOP WAS VECTORIZED.
fluxctstag.c(1413): (col. 3) remark: LOOP WAS VECTORIZED.
fluxctstag.c(87): (col. 3) remark: BLOCK WAS VECTORIZED.
fluxctstag.c(106): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
fluxctstag.c(122): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
fluxctstag.c(137): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c fluxcompute.c -lm -lmkl_lapack -lmkl -lguide -lpthread
fluxcompute.c(305): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(cmax+cmin!=0.0){
                    ^

fluxcompute.c(361): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(cmax+cmin!=0.0){
                  ^

mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c fluxvpot.c -lm -lmkl_lapack -lmkl -lguide -lpthread
fluxvpot.c(894): remark #111: statement is unreachable
    Nvec[0]=0;
    ^

fluxvpot.c(989): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
fluxvpot.c(989): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
fluxvpot.c(742): (col. 3) remark: BLOCK WAS VECTORIZED.
fluxvpot.c(764): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
fluxvpot.c(786): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
fluxvpot.c(808): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
fluxvpot.c(555): (col. 3) remark: BLOCK WAS VECTORIZED.
fluxvpot.c(400): (col. 3) remark: BLOCK WAS VECTORIZED.
fluxvpot.c(436): (col. 5) remark: LOOP WAS VECTORIZED.
fluxvpot.c(1129): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
fluxvpot.c(1129): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c bounds.c -lm -lmkl_lapack -lmkl -lguide -lpthread
bounds.c(240): (col. 7) remark: LOOP WAS VECTORIZED.
bounds.c(218): (col. 5) remark: LOOP WAS VECTORIZED.
bounds.c(221): (col. 5) remark: LOOP WAS VECTORIZED.
bounds.c(222): (col. 5) remark: LOOP WAS VECTORIZED.
bounds.c(42): (col. 3) remark: LOOP WAS VECTORIZED.
bounds.c(19): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c bounds.tools.c -lm -lmkl_lapack -lmkl -lguide -lpthread
bounds.tools.c(2388): remark #111: statement is unreachable
    if( DOGRIDSECTIONING==0) {  //don't do anything if sectioning not done
    ^

bounds.tools.c(2393): remark #111: statement is unreachable
    if(BCtype[X1DN]==FIXEDUSEPANALYTIC || BCtype[X1UP]==FIXEDUSEPANALYTIC){
    ^

bounds.tools.c(2484): remark #111: statement is unreachable
    if( DOGRIDSECTIONING==0) {  //don't do anything if sectioning not done
    ^

bounds.tools.c(2489): remark #111: statement is unreachable
    if(BCtype[X1DN]==FIXEDUSEPANALYTIC || BCtype[X1UP]==FIXEDUSEPANALYTIC){
    ^

bounds.tools.c(2569): remark #111: statement is unreachable
    dimen = 1;
    ^

bounds.tools.c(2654): remark #1572: floating-point equality and inequality comparisons are unreliable
  	singfound+=(localgdet[0]!=0.0);
  	                          ^

bounds.tools.c(2721): remark #1572: floating-point equality and inequality comparisons are unreliable
  	singfound+=(localgdet[0]!=0.0);
  	                          ^

bounds.tools.c(407): (col. 2) remark: LOOP WAS VECTORIZED.
bounds.tools.c(407): (col. 2) remark: LOOP WAS VECTORIZED.
bounds.tools.c(264): (col. 2) remark: LOOP WAS VECTORIZED.
bounds.tools.c(264): (col. 2) remark: LOOP WAS VECTORIZED.
bounds.tools.c(1473): (col. 5) remark: LOOP WAS VECTORIZED.
bounds.tools.c(1510): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c boundsint.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c diag.c -lm -lmkl_lapack -lmkl -lguide -lpthread
diag.c(615): remark #1572: floating-point equality and inequality comparisons are unreliable
    if((DOAREAMAPDIAG)&&(localt != tlastareamap)&&(dofailmap)&&(localnstep>=steptofailmap)){
                                   ^

diag.c(628): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( ((DODUMPDIAG)&&(DODIAGEVERYSUBSTEP||((localt!=tlastgen[DTDUMP])&&(localt >= tdumpgen[DTDUMP] || (RESTARTMODE&&dofaildump&&(localnstep>=steptofaildump)) || call_code==FINAL_OUT ))) )  ){
                                                      ^

diag.c(633): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( ((DODEBUG)&&(DOENODEBUGEVERYSUBSTEP||DODIAGEVERYSUBSTEP||((localt!=tlastgen[DTDEBUG])&&(localt >= tdumpgen[DTDEBUG] || call_code==FINAL_OUT))) )  ){
                                                                           ^

diag.c(639): remark #1572: floating-point equality and inequality comparisons are unreliable
    if((DOAVGDIAG)&&((localt!=tlastgen[DTAVG])&&(localt >= tdumpgen[DTAVG] || call_code==FINAL_OUT))){
                              ^

diag.c(646): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(DOENERDIAG&&(DODIAGEVERYSUBSTEP||((localt!=tlastgen[DTENER])&&( (localt >= tdumpgen[DTENER])||(call_code==INIT_OUT)||(call_code==FINAL_OUT)||firsttime)))){
                                                  ^

diag.c(653): remark #1572: floating-point equality and inequality comparisons are unreliable
    if((DOIMAGEDIAG)&&(DODIAGEVERYSUBSTEP||((localt!=tlastgen[DTIMAGE])&&(localt >= tdumpgen[DTIMAGE] || call_code==FINAL_OUT))) ){
                                                     ^

diag.c(661): remark #1572: floating-point equality and inequality comparisons are unreliable
    if((DOFIELDLINE)&&(DODIAGEVERYSUBSTEP||((localt!=tlastgen[DTFIELDLINE])&&(localt >= tdumpgen[DTFIELDLINE] || call_code==FINAL_OUT))) ){
                                                     ^

diag.c(719): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(MACP0A1(prim,i,j,k,pl)!=MACP0A1(prim,i+N1,j,k,pl)){
  	                           ^

diag.c(722): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(MACP0A1(prim,i,j,k,pl)!=MACP0A1(prim,i,j+N2,k,pl)){
  	                           ^

diag.c(733): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(GLOBALMACP0A1(udump,i,j,k,pl)!=GLOBALMACP0A1(udump,i+N1,j,k,pl)){
  	                                  ^

diag.c(736): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(GLOBALMACP0A1(udump,i,j,k,pl)!=GLOBALMACP0A1(udump,i,j+N2,k,pl)){
  	                                  ^

diag.c(779): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(MACP0A1(prim,i,j,k,pl)!=MACP0A1(prim,i+N1,j,k,pl)){
  	                           ^

diag.c(782): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(MACP0A1(prim,i,j,k,pl)!=MACP0A1(prim,i,j+N2,k,pl)){
  	                           ^

diag.c(1970): (col. 5) remark: LOOP WAS VECTORIZED.
diag.c(2004): (col. 5) remark: LOOP WAS VECTORIZED.
diag.c(2012): (col. 5) remark: LOOP WAS VECTORIZED.
diag.c(2046): (col. 7) remark: LOOP WAS VECTORIZED.
diag.c(1823): (col. 4) remark: LOOP WAS VECTORIZED.
diag.c(1829): (col. 4) remark: LOOP WAS VECTORIZED.
diag.c(1782): (col. 2) remark: LOOP WAS VECTORIZED.
diag.c(1788): (col. 2) remark: PARTIAL LOOP WAS VECTORIZED.
diag.c(1595): (col. 5) remark: LOOP WAS VECTORIZED.
diag.c(1657): (col. 5) remark: LOOP WAS VECTORIZED.
diag.c(1483): (col. 5) remark: LOOP WAS VECTORIZED.
diag.c(1509): (col. 5) remark: LOOP WAS VECTORIZED.
diag.c(1380): (col. 4) remark: LOOP WAS VECTORIZED.
diag.c(1014): (col. 7) remark: LOOP WAS VECTORIZED.
diag.c(1082): (col. 4) remark: LOOP WAS VECTORIZED.
diag.c(1101): (col. 4) remark: LOOP WAS VECTORIZED.
diag.c(1150): (col. 4) remark: LOOP WAS VECTORIZED.
diag.c(1154): (col. 4) remark: LOOP WAS VECTORIZED.
diag.c(1302): (col. 2) remark: LOOP WAS VECTORIZED.
diag.c(72): (col. 5) remark: LOOP WAS VECTORIZED.
diag.c(79): (col. 7) remark: LOOP WAS VECTORIZED.
diag.c(91): (col. 7) remark: LOOP WAS VECTORIZED.
diag.c(1444): (col. 5) remark: LOOP WAS VECTORIZED.
diag.c(1470): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c dump.c -lm -lmkl_lapack -lmkl -lguide -lpthread
dump.c(1059): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(q.ucon[RR]!=0.0){
                   ^

dump.c(62): (col. 3) remark: BLOCK WAS VECTORIZED.
dump.c(119): (col. 3) remark: BLOCK WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c dumpgen.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c dump_ener.c -lm -lmkl_lapack -lmkl -lguide -lpthread
dump_ener.c(337): remark #1572: floating-point equality and inequality comparisons are unreliable
  		     U_init[pl]!=0.0 ? ftemp0/U_init[pl] : 0.0,
  		                 ^

dump_ener.c(339): remark #1572: floating-point equality and inequality comparisons are unreliable
  		     U_init[pl]!=0.0 ? ftemp1/U_init[pl] : 0.0,
  		                 ^

dump_ener.c(955): (col. 3) remark: LOOP WAS VECTORIZED.
dump_ener.c(961): (col. 7) remark: LOOP WAS VECTORIZED.
dump_ener.c(1020): (col. 8) remark: LOOP WAS VECTORIZED.
dump_ener.c(1020): (col. 8) remark: LOOP WAS VECTORIZED.
dump_ener.c(299): (col. 7) remark: LOOP WAS VECTORIZED.
dump_ener.c(299): (col. 7) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c image.c -lm -lmkl_lapack -lmkl -lguide -lpthread
image.c(303): remark #1572: floating-point equality and inequality comparisons are unreliable
    if (lmax != lmin)
                ^

image.c(178): (col. 4) remark: LOOP WAS VECTORIZED.
image.c(211): (col. 4) remark: LOOP WAS VECTORIZED.
image.c(356): (col. 6) remark: LOOP WAS VECTORIZED.
image.c(356): (col. 6) remark: LOOP WAS VECTORIZED.
image.c(112): (col. 9) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c fail.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c fixup.c -lm -lmkl_lapack -lmkl -lguide -lpthread
fixup.c(2205): remark #111: statement is unreachable
    limgen=MAX(MAX(lim[1],lim[2]),lim[3]); // not reached if((LIMADJUST==0)&&(FLUXADJUST==0))
    ^

fixup.c(2387): remark #1572: floating-point equality and inequality comparisons are unreliable
    if((gamma > realgammamax && (gamma!=1.0))) {    
                                        ^

fixup.c(2890): (col. 7) remark: LOOP WAS VECTORIZED.
fixup.c(2936): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2966): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2991): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2991): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2991): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2991): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2772): (col. 7) remark: LOOP WAS VECTORIZED.
fixup.c(2781): (col. 7) remark: LOOP WAS VECTORIZED.
fixup.c(2802): (col. 7) remark: LOOP WAS VECTORIZED.
fixup.c(2820): (col. 7) remark: LOOP WAS VECTORIZED.
fixup.c(265): (col. 4) remark: LOOP WAS VECTORIZED.
fixup.c(268): (col. 4) remark: LOOP WAS VECTORIZED.
fixup.c(283): (col. 4) remark: LOOP WAS VECTORIZED.
fixup.c(287): (col. 4) remark: LOOP WAS VECTORIZED.
fixup.c(2834): (col. 10) remark: LOOP WAS VECTORIZED.
fixup.c(2834): (col. 10) remark: LOOP WAS VECTORIZED.
fixup.c(2834): (col. 10) remark: LOOP WAS VECTORIZED.
fixup.c(2834): (col. 10) remark: LOOP WAS VECTORIZED.
fixup.c(2544): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2558): (col. 3) remark: LOOP WAS VECTORIZED.
fixup.c(2576): (col. 3) remark: LOOP WAS VECTORIZED.
fixup.c(2661): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2673): (col. 7) remark: PARTIAL LOOP WAS VECTORIZED.
fixup.c(2736): (col. 3) remark: LOOP WAS VECTORIZED.
fixup.c(2736): (col. 3) remark: LOOP WAS VECTORIZED.
fixup.c(2736): (col. 3) remark: LOOP WAS VECTORIZED.
fixup.c(2736): (col. 3) remark: LOOP WAS VECTORIZED.
fixup.c(880): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(979): (col. 2) remark: LOOP WAS VECTORIZED.
fixup.c(1070): (col. 6) remark: LOOP WAS VECTORIZED.
fixup.c(1127): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(1127): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(1127): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(1127): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(1659): (col. 20) remark: LOOP WAS VECTORIZED.
fixup.c(1664): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(1676): (col. 20) remark: LOOP WAS VECTORIZED.
fixup.c(1682): (col. 20) remark: LOOP WAS VECTORIZED.
fixup.c(1689): (col. 7) remark: LOOP WAS VECTORIZED.
fixup.c(2378): (col. 3) remark: LOOP WAS VECTORIZED.
fixup.c(2478): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2478): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2478): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(2478): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(397): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
fixup.c(397): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
fixup.c(504): (col. 7) remark: LOOP WAS VECTORIZED.
fixup.c(506): (col. 7) remark: LOOP WAS VECTORIZED.
fixup.c(532): (col. 7) remark: LOOP WAS VECTORIZED.
fixup.c(343): (col. 2) remark: LOOP WAS VECTORIZED.
fixup.c(132): (col. 8) remark: PARTIAL LOOP WAS VECTORIZED.
fixup.c(132): (col. 8) remark: PARTIAL LOOP WAS VECTORIZED.
fixup.c(132): (col. 8) remark: LOOP WAS VECTORIZED.
fixup.c(132): (col. 8) remark: LOOP WAS VECTORIZED.
fixup.c(132): (col. 8) remark: LOOP WAS VECTORIZED.
fixup.c(90): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(90): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(90): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(90): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(90): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(90): (col. 5) remark: LOOP WAS VECTORIZED.
fixup.c(90): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c mpi_init.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpi_init.c(330): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_init.c(347): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_init.c(350): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_init.c(452): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_init.c(456): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_init.c(468): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_init.c(468): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_init.c(468): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_init.c(560): (col. 3) remark: BLOCK WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c mpi_init_grmhd.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c mpi_fileio.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpi_fileio.c(2199): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_fileio.c(2199): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_fileio.c(2199): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_fileio.c(2199): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_fileio.c(2199): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_fileio.c(2199): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_fileio.c(2199): (col. 3) remark: LOOP WAS VECTORIZED.
mpi_fileio.c(2700): (col. 5) remark: LOOP WAS VECTORIZED.
mpi_fileio.c(2703): (col. 5) remark: LOOP WAS VECTORIZED.
mpi_fileio.c(2718): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c mpi_fprintfs.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c boundmpi.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c boundmpiint.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c mpi_grmhd_grray_liaison.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c interppoint.c -lm -lmkl_lapack -lmkl -lguide -lpthread
interppoint.c(155): (col. 2) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c interppoint.para.c -lm -lmkl_lapack -lmkl -lguide -lpthread
interppoint.para.c(1015): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c interpline.c -lm -lmkl_lapack -lmkl -lguide -lpthread
interpline.c(2041): warning #175: subscript out of range
      gamma = MACP0A1(p2interp,i2,j2,k2,VSQ);  //Lorentz factor
              ^

interpline.c(3207): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(3216): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(3225): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(2852): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(2797): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(2804): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(2830): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(2031): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(1938): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(1837): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(965): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(965): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(965): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(977): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(977): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(977): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(978): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(978): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(978): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(981): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(981): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(981): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(617): (col. 2) remark: LOOP WAS VECTORIZED.
interpline.c(700): (col. 18) remark: LOOP WAS VECTORIZED.
interpline.c(730): (col. 18) remark: LOOP WAS VECTORIZED.
interpline.c(1031): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(1031): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(1031): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(1048): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(1048): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(1048): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(1051): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(1051): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(1051): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(2956): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(3004): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(3027): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(2454): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.c(297): (col. 2) remark: LOOP WAS VECTORIZED.
interpline.c(335): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.c(340): (col. 23) remark: LOOP WAS VECTORIZED.
interpline.c(364): (col. 23) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c interpline.para.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c interpline.mono.c -lm -lmkl_lapack -lmkl -lguide -lpthread
interpline.mono.c(369): (col. 5) remark: LOOP WAS VECTORIZED.
interpline.mono.c(274): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c interpline.jmono.c -lm -lmkl_lapack -lmkl -lguide -lpthread
interpline.jmono.c(245): remark #1572: floating-point equality and inequality comparisons are unreliable
        if((USESHOCKINDICATOR||(USECUSPINDICATOR==2))&&(monoindicator[MONOINDTYPE][i]==1)){
                                                                                       ^

interpline.jmono.c(511): remark #1572: floating-point equality and inequality comparisons are unreliable
        if(monoindicator[MONOINDTYPE][i]==1){
                                          ^

interpline.jmono.c(1050): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(badtype1 || badtype2 ){
                   ^

interpline.jmono.c(1050): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(badtype1 || badtype2 ){
                   ^

mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c interpline.smono.c -lm -lmkl_lapack -lmkl -lguide -lpthread
interpline.smono.c(186): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  if(monoindicator[MONOINDTYPE][i] != 0 ) {
  	                                      ^

interpline.smono.c(254): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  if(monoindicator[MONOINDTYPE][i] != 0 ){
  	                                      ^

interpline.smono.c(341): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  if( monoindicator[MONOINDTYPE][i] != 0 ){
  	                                       ^

interpline.smono.c(653): remark #1572: floating-point equality and inequality comparisons are unreliable
    assert( x1 == x2, "transition_function(): cannot have transition values x1 equal x2\n" );
                  ^

interpline.smono.c(239): (col. 16) remark: LOOP WAS VECTORIZED.
interpline.smono.c(49): (col. 7) remark: LOOP WAS VECTORIZED.
interpline.smono.c(29): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c main.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c mytime.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mytime.c(89): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(DTstep!=0.0) NDTCCHECK=(int)((SFTYPE)(diffnstep)*DTstep/walltime);
  	           ^

mytime.c(90): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(DTstepdot!=0.0) NDTDOTCCHECK=(int)((SFTYPE)(diffnstep)*DTstepdot/walltime);
  	              ^

mytime.c(91): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(DTperf!=0.0) NZCCHECK=(int)((SFTYPE)(diffnstep)*DTperf/walltime);
  	           ^

mytime.c(92): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if(DTgocheck!=0.0) NGOCHECK=(int)((SFTYPE)(diffnstep)*DTgocheck/walltime);
  	              ^

mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c metric.c -lm -lmkl_lapack -lmkl -lguide -lpthread
metric.c(1667): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(s2!=0.0){
           ^

metric.c(2841): remark #1572: floating-point equality and inequality comparisons are unreliable
        Xhgen[k][k] += MYDELTAh(truedelta[k],k);
                       ^

metric.c(2842): remark #1572: floating-point equality and inequality comparisons are unreliable
        Xlgen[k][k] += MYDELTAl(truedelta[k],k);
                       ^

metric.c(3044): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(MBH!=1.0){
            ^

metric.c(3254): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(MBH!=1.0){
            ^

metric.c(3716): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(MBH!=1.0){
            ^

metric.c(3769): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(3297): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(3081): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(2236): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(2113): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(2404): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(2274): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(2182): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1935): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(1935): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1935): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1935): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1935): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1924): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(1924): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1924): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1924): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1924): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1912): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(1912): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1912): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1912): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1912): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1837): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(1837): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1837): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1837): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1837): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1847): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(1847): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1847): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1847): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1847): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1866): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(1866): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1866): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1866): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1866): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1790): (col. 5) remark: LOOP WAS VECTORIZED.
metric.c(2651): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(2673): (col. 5) remark: LOOP WAS VECTORIZED.
metric.c(2702): (col. 7) remark: LOOP WAS VECTORIZED.
metric.c(2739): (col. 7) remark: LOOP WAS VECTORIZED.
metric.c(2749): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1857): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(1857): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1857): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1857): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1857): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1882): (col. 52) remark: BLOCK WAS VECTORIZED.
metric.c(1882): (col. 52) remark: LOOP WAS VECTORIZED.
metric.c(1882): (col. 52) remark: LOOP WAS VECTORIZED.
metric.c(1882): (col. 52) remark: LOOP WAS VECTORIZED.
metric.c(1882): (col. 52) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1947): (col. 3) remark: BLOCK WAS VECTORIZED.
metric.c(1947): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1947): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1947): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(1947): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(1819): (col. 5) remark: LOOP WAS VECTORIZED.
metric.c(1826): (col. 5) remark: BLOCK WAS VECTORIZED.
metric.c(1826): (col. 5) remark: LOOP WAS VECTORIZED.
metric.c(1826): (col. 5) remark: LOOP WAS VECTORIZED.
metric.c(1826): (col. 5) remark: LOOP WAS VECTORIZED.
metric.c(1826): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
metric.c(311): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(328): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(347): (col. 3) remark: LOOP WAS VECTORIZED.
metric.c(366): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c metric_tools.c -lm -lmkl_lapack -lmkl -lguide -lpthread
metric_tools.c(96): remark #1572: floating-point equality and inequality comparisons are unreliable
      if (h == 0.0) nrerror("h must be nonzero in dfridr.");
               ^

metric_tools.c(642): (col. 3) remark: LOOP WAS VECTORIZED.
metric_tools.c(100): (col. 5) remark: LOOP WAS VECTORIZED.
metric_tools.c(123): (col. 7) remark: LOOP WAS VECTORIZED.
metric_tools.c(124): (col. 7) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c math_tools.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c metric_selfgravity_or_evolvemetric.c -lm -lmkl_lapack -lmkl -lguide -lpthread
metric_selfgravity_or_evolvemetric.c(424): remark #111: statement is unreachable
    get_new_metric_parms(&MBHpar, &apar, &QBHpar);
    ^

metric_selfgravity_or_evolvemetric.c(612): remark #111: statement is unreachable
    specialstep=2; // signifies to rest of code below that evolving on substeps
    ^

metric_selfgravity_or_evolvemetric.c(899): remark #128: loop is not reachable from preceding code
    for (loc = NPG - 1; loc >= 0; loc--) {
    ^

metric_selfgravity_or_evolvemetric.c(1173): remark #111: statement is unreachable
    set_boundloop(boundvartype, inboundloop,outboundloop,innormalloop,outnormalloop,inoutlohi, &riin, &riout, &rjin, &rjout, &rkin, &rkout, dosetbc);
    ^

metric_selfgravity_or_evolvemetric.c(2391): remark #111: statement is unreachable
    return(1); // shouldn't get here
    ^

metric_selfgravity_or_evolvemetric.c(2609): (col. 4) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c coord.c -lm -lmkl_lapack -lmkl -lguide -lpthread
coord.c(1883): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(npow==1.0){
               ^

coord.c(1893): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(npow==1.0){
               ^

coord.c(1904): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(npow==1.0){
               ^

coord.c(1917): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(npow==1.0){
               ^

coord.c(1932): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(npow==1.0){
               ^

coord.c(1942): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(npow==1.0){
               ^

mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c phys.c -lm -lmkl_lapack -lmkl -lguide -lpthread
phys.c(307): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c phys.tools.c -lm -lmkl_lapack -lmkl -lguide -lpthread
phys.tools.c(93): warning #175: subscript out of range
    if(fundir!=TT) fluxinputma[FLUXSPLITPMA(fluxdir)]=fluxdiag;
                              ^

phys.tools.c(2916): (col. 2) remark: LOOP WAS VECTORIZED.
phys.tools.c(2881): (col. 2) remark: LOOP WAS VECTORIZED.
phys.tools.c(2850): (col. 7) remark: LOOP WAS VECTORIZED.
phys.tools.c(2864): (col. 7) remark: LOOP WAS VECTORIZED.
phys.tools.c(2867): (col. 2) remark: LOOP WAS VECTORIZED.
phys.tools.c(2813): (col. 7) remark: LOOP WAS VECTORIZED.
phys.tools.c(2827): (col. 7) remark: LOOP WAS VECTORIZED.
phys.tools.c(2830): (col. 2) remark: LOOP WAS VECTORIZED.
phys.tools.c(2476): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(2431): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(2383): (col. 5) remark: LOOP WAS VECTORIZED.
phys.tools.c(2386): (col. 5) remark: LOOP WAS VECTORIZED.
phys.tools.c(2314): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(2353): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1492): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
phys.tools.c(860): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(860): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(860): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(860): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(860): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(996): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(996): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(997): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(997): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1000): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(893): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1117): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1329): (col. 15) remark: LOOP WAS VECTORIZED.
phys.tools.c(1329): (col. 15) remark: LOOP WAS VECTORIZED.
phys.tools.c(1329): (col. 15) remark: LOOP WAS VECTORIZED.
phys.tools.c(1329): (col. 15) remark: LOOP WAS VECTORIZED.
phys.tools.c(1329): (col. 15) remark: LOOP WAS VECTORIZED.
phys.tools.c(1348): (col. 26) remark: LOOP WAS VECTORIZED.
phys.tools.c(1261): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1261): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1261): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1261): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1261): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1261): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1180): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1187): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1144): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(1151): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(912): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(912): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(913): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(913): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(916): (col. 3) remark: LOOP WAS VECTORIZED.
phys.tools.c(223): (col. 5) remark: LOOP WAS VECTORIZED.
phys.tools.c(380): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c step_ch.c -lm -lmkl_lapack -lmkl -lguide -lpthread
step_ch.c(121): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){ // don't do if just "passing through"
           ^

step_ch.c(154): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){ // don't do if just passing through
           ^

step_ch.c(175): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){ // don't do if just passing through
           ^

step_ch.c(199): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){ // don't do if just passing through
           ^

step_ch.c(391): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){
           ^

step_ch.c(406): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){ // don't do if just passing through
           ^

step_ch.c(430): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(dt!=0.0){ // don't do if just passing through
           ^

step_ch.c(1101): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(TIMEORDER==4 && dt!=0.0){
                           ^

step_ch.c(1136): remark #1572: floating-point equality and inequality comparisons are unreliable
    else if(TIMEORDER==3  && dt!=0.0){
                                 ^

step_ch.c(1162): remark #1572: floating-point equality and inequality comparisons are unreliable
    else if(TIMEORDER==2  && dt!=0.0){
                                 ^

step_ch.c(1206): remark #1572: floating-point equality and inequality comparisons are unreliable
    else if(TIMEORDER==1 ||  dt==0.0){
                                 ^

step_ch.c(1479): (col. 5) remark: LOOP WAS VECTORIZED.
step_ch.c(1353): (col. 7) remark: LOOP WAS VECTORIZED.
step_ch.c(1296): (col. 5) remark: LOOP WAS VECTORIZED.
step_ch.c(1277): (col. 3) remark: LOOP WAS VECTORIZED.
step_ch.c(1265): (col. 3) remark: LOOP WAS VECTORIZED.
step_ch.c(923): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
step_ch.c(1019): (col. 2) remark: LOOP WAS VECTORIZED.
step_ch.c(504): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
step_ch.c(1243): (col. 3) remark: LOOP WAS VECTORIZED.
step_ch.c(1231): (col. 3) remark: LOOP WAS VECTORIZED.
step_ch.c(88): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c phys.ffde.c -lm -lmkl_lapack -lmkl -lguide -lpthread
phys.ffde.c(994): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(AA==0.0){
           ^

phys.ffde.c(1001): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(BB==0.0){
           ^

phys.ffde.c(951): (col. 5) remark: LOOP WAS VECTORIZED.
phys.ffde.c(951): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
phys.ffde.c(951): (col. 5) remark: PARTIAL LOOP WAS VECTORIZED.
phys.ffde.c(1497): (col. 7) remark: LOOP WAS VECTORIZED.
phys.ffde.c(191): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(367): (col. 5) remark: LOOP WAS VECTORIZED.
phys.ffde.c(599): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(599): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
phys.ffde.c(599): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
phys.ffde.c(603): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(604): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(1560): (col. 7) remark: LOOP WAS VECTORIZED.
phys.ffde.c(1099): (col. 7) remark: LOOP WAS VECTORIZED.
phys.ffde.c(1116): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(1116): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
phys.ffde.c(1116): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
phys.ffde.c(1151): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(1152): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(1154): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(1155): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(1041): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(987): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(894): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(898): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(909): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(912): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(916): (col. 5) remark: LOOP WAS VECTORIZED.
phys.ffde.c(925): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(930): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(930): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(930): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(836): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(772): (col. 3) remark: BLOCK WAS VECTORIZED.
phys.ffde.c(812): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(812): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
phys.ffde.c(812): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
phys.ffde.c(730): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(697): (col. 3) remark: BLOCK WAS VECTORIZED.
phys.ffde.c(706): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(706): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(706): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(658): (col. 3) remark: BLOCK WAS VECTORIZED.
phys.ffde.c(658): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(658): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(658): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(414): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(423): (col. 3) remark: LOOP WAS VECTORIZED.
phys.ffde.c(429): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c phys.coldgrmhd.c -lm -lmkl_lapack -lmkl -lguide -lpthread
phys.coldgrmhd.c(72): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(72): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(72): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(75): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(75): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(93): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(137): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(165): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
phys.coldgrmhd.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c eos.c -lm -lmkl_lapack -lmkl -lguide -lpthread
kazfulleos.c(1789): warning #175: subscript out of range
      AA = 0.5*(tfptr[0][1][kkk][lll]-tfptr[0][-1][kkk][lll]);
                                              ^

kazfulleos.c(1790): warning #175: subscript out of range
      BB = 0.5*(tfptr[0][1][kkk][lll]+tfptr[0][-1][kkk][lll]-2.0*tfptr[0][0][kkk][lll]);
                                              ^

kazfulleos.c(1804): warning #175: subscript out of range
      AA = 0.5*(tfptr[0][0][1][lll]-tfptr[0][0][-1][lll]);
                                               ^

kazfulleos.c(1805): warning #175: subscript out of range
      BB = 0.5*(tfptr[0][0][1][lll]+tfptr[0][0][-1][lll]-2.0*tfptr[0][0][0][lll]);
                                               ^

kazfulleos.c(1817): warning #175: subscript out of range
    AA = 0.5*(tfptr[0][0][0][1]-tfptr[0][0][0][-1]);
                                              ^

kazfulleos.c(1818): warning #175: subscript out of range
    BB = 0.5*(tfptr[0][0][0][1]+tfptr[0][0][0][-1]-2.0*tfptr[0][0][0][0]);
                                              ^

kazfulleos.c(2029): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(tdist[iii]==0.0){
                     ^

kazfulleos.c(2289): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(totaldist==0.0){
                  ^

kazfulleos.c(2466): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(totaldist==0.0){
                  ^

kazfulleos.c(4323): remark #128: loop is not reachable from preceding code
    COMPFULLLOOP{
    ^

kazfulleos.c(4075): (col. 3) remark: LOOP WAS VECTORIZED.
kazfulleos.c(4087): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(4097): (col. 3) remark: LOOP WAS VECTORIZED.
kazfulleos.c(4194): (col. 8) remark: LOOP WAS VECTORIZED.
kazfulleos.c(4194): (col. 8) remark: LOOP WAS VECTORIZED.
kazfulleos.c(4217): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(4242): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(4245): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(4383): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(2651): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(2653): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3347): (col. 6) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3347): (col. 6) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3372): (col. 10) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3372): (col. 10) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3378): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3773): (col. 12) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3336): (col. 10) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3336): (col. 10) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3301): (col. 6) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3301): (col. 6) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3965): (col. 3) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3401): (col. 3) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3401): (col. 3) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3401): (col. 3) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3495): (col. 7) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3496): (col. 7) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3715): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3717): (col. 7) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3718): (col. 7) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3328): (col. 10) remark: LOOP WAS VECTORIZED.
kazfulleos.c(3328): (col. 10) remark: LOOP WAS VECTORIZED.
grbpwf99eos.c(216): (col. 3) remark: LOOP WAS VECTORIZED.
grbpwf99eos.c(200): (col. 5) remark: LOOP WAS VECTORIZED.
mignoneeos.c(235): (col. 3) remark: LOOP WAS VECTORIZED.
mignoneeos.c(219): (col. 5) remark: LOOP WAS VECTORIZED.
idealgaseos.c(197): (col. 3) remark: LOOP WAS VECTORIZED.
idealgaseos.c(181): (col. 5) remark: LOOP WAS VECTORIZED.
kazfulleos.c(594): (col. 3) remark: BLOCK WAS VECTORIZED.
kazfulleos.c(607): (col. 3) remark: BLOCK WAS VECTORIZED.
kazfulleos.c(620): (col. 3) remark: BLOCK WAS VECTORIZED.
kazfulleos.c(1106): (col. 38) remark: LOOP WAS VECTORIZED.
kazfulleos.c(1216): (col. 4) remark: BLOCK WAS VECTORIZED.
kazfulleos.c(1229): (col. 4) remark: BLOCK WAS VECTORIZED.
kazfulleos.c(1264): (col. 4) remark: BLOCK WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c vchar.c -lm -lmkl_lapack -lmkl -lguide -lpthread
vchar.c(545): (col. 3) remark: LOOP WAS VECTORIZED.
vchar.c(547): (col. 3) remark: LOOP WAS VECTORIZED.
vchar.c(552): (col. 3) remark: LOOP WAS VECTORIZED.
vchar.c(566): (col. 3) remark: LOOP WAS VECTORIZED.
vchar.c(571): (col. 3) remark: LOOP WAS VECTORIZED.
vchar.c(224): (col. 3) remark: LOOP WAS VECTORIZED.
vchar.c(228): (col. 3) remark: LOOP WAS VECTORIZED.
vchar.c(125): (col. 8) remark: LOOP WAS VECTORIZED.
vchar.c(125): (col. 8) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c transforms.c -lm -lmkl_lapack -lmkl -lguide -lpthread
transforms.c(625): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(575): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(581): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(558): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(559): (col. 21) remark: LOOP WAS VECTORIZED.
transforms.c(543): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(543): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(519): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(505): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(490): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(475): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(464): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(451): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(422): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(404): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(340): (col. 3) remark: BLOCK WAS VECTORIZED.
transforms.c(344): (col. 3) remark: BLOCK WAS VECTORIZED.
transforms.c(355): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(278): (col. 3) remark: BLOCK WAS VECTORIZED.
transforms.c(282): (col. 3) remark: BLOCK WAS VECTORIZED.
transforms.c(292): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(196): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(196): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(196): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(201): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(201): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(201): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(209): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(209): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(225): (col. 5) remark: BLOCK WAS VECTORIZED.
transforms.c(225): (col. 5) remark: BLOCK WAS VECTORIZED.
transforms.c(225): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(228): (col. 5) remark: BLOCK WAS VECTORIZED.
transforms.c(228): (col. 5) remark: BLOCK WAS VECTORIZED.
transforms.c(228): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(146): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(146): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(146): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(149): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(149): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(149): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(157): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(157): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(99): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(99): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(99): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(52): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(52): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(52): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(56): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(56): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(56): (col. 5) remark: LOOP WAS VECTORIZED.
transforms.c(64): (col. 3) remark: LOOP WAS VECTORIZED.
transforms.c(15): (col. 10) remark: LOOP WAS VECTORIZED.
transforms.c(15): (col. 10) remark: LOOP WAS VECTORIZED.
transforms.c(15): (col. 10) remark: LOOP WAS VECTORIZED.
transforms.c(15): (col. 10) remark: LOOP WAS VECTORIZED.
transforms.c(15): (col. 10) remark: LOOP WAS VECTORIZED.
transforms.c(15): (col. 10) remark: LOOP WAS VECTORIZED.
transforms.c(15): (col. 10) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c sources.c -lm -lmkl_lapack -lmkl -lguide -lpthread
sources.c(602): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c rescale_interp.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c gaussj.c -lm -lmkl_lapack -lmkl -lguide -lpthread
gaussj.c(41): remark #1572: floating-point equality and inequality comparisons are unreliable
      if (a[icol][icol] == 0.0) {
                           ^

gaussj.c(13): (col. 3) remark: LOOP WAS VECTORIZED.
gaussj.c(48): (col. 5) remark: LOOP WAS VECTORIZED.
gaussj.c(50): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c lubksb.c -lm -lmkl_lapack -lmkl -lguide -lpthread
lubksb.c(15): remark #1572: floating-point equality and inequality comparisons are unreliable
      else if (sum)
               ^

lubksb.c(13): (col. 7) remark: LOOP WAS VECTORIZED.
lubksb.c(21): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c ludcmp.c -lm -lmkl_lapack -lmkl -lguide -lpthread
ludcmp.c(23): remark #1572: floating-point equality and inequality comparisons are unreliable
      if (big == 0.0) {
                 ^

ludcmp.c(67): remark #1572: floating-point equality and inequality comparisons are unreliable
      if (a[j][j] == 0.0)
                     ^

ludcmp.c(20): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c mnewt.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mnewt.c(119): (col. 3) remark: LOOP WAS VECTORIZED.
mnewt.c(169): (col. 7) remark: LOOP WAS VECTORIZED.
mnewt.c(216): (col. 7) remark: LOOP WAS VECTORIZED.
mnewt.c(221): (col. 7) remark: LOOP WAS VECTORIZED.
mnewt.c(235): (col. 2) remark: LOOP WAS VECTORIZED.
mnewt.c(261): (col. 2) remark: LOOP WAS VECTORIZED.
mnewt.c(269): (col. 7) remark: LOOP WAS VECTORIZED.
mnewt.c(200): (col. 2) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c nrutil.c -lm -lmkl_lapack -lmkl -lguide -lpthread
nrutil.c(212): (col. 3) remark: LOOP WAS VECTORIZED.
nrutil.c(140): (col. 3) remark: LOOP WAS VECTORIZED.
nrutil.c(122): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c ranc.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c tensor.c -lm -lmkl_lapack -lmkl -lguide -lpthread
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c tetrad.c -lm -lmkl_lapack -lmkl -lguide -lpthread
tetrad.c(185): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(sign(tetr[j][j])!=sign(mink(j,j))){
                           ^

tetrad.c(65): (col. 10) remark: LOOP WAS VECTORIZED.
tetrad.c(68): (col. 3) remark: LOOP WAS VECTORIZED.
tetrad.c(240): (col. 8) remark: LOOP WAS VECTORIZED.
tetrad.c(270): (col. 3) remark: LOOP WAS VECTORIZED.
tetrad.c(298): (col. 3) remark: LOOP WAS VECTORIZED.
tetrad.c(299): (col. 3) remark: LOOP WAS VECTORIZED.
tetrad.c(38): (col. 3) remark: PARTIAL LOOP WAS VECTORIZED.
tetrad.c(46): (col. 8) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprimgen.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprimgen.c(957): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(ptest1[pl]!=0.0) test=fabs(ptest1[pl]-ptest2[pl])/ptest1[pl]>ERRORCONST;
                     ^

utoprimgen.c(960): remark #1572: floating-point equality and inequality comparisons are unreliable
        dualfprintf(fail_file,"utoprimdiff: %d %ld :: %d %d %d :: %d ::  %21.15g   %21.15g   %21.15g %21.15g :: %d %d :: %21.15g %21.15g\n",steppart,nstep,startpos[1]+ptrgeom->i,startpos[2]+ptrgeom->j,startpos[3]+ptrgeom->k,pl,ptest1[pl]-ptest2[pl],(ptest1[pl]!=0.0) ? fabs(ptest1[pl]-ptest2[pl])/ptest1[pl] : ptest1[pl]-ptest2[pl],ptest1[pl],ptest2[pl],lntries1,lntries2,lerrx1,lerrx2);
                                                                                                                                                                                                                                                                      ^

utoprimgen.c(116): (col. 3) remark: LOOP WAS VECTORIZED.
utoprimgen.c(938): (col. 3) remark: LOOP WAS VECTORIZED.
utoprimgen.c(373): (col. 5) remark: LOOP WAS VECTORIZED.
utoprimgen.c(374): (col. 5) remark: LOOP WAS VECTORIZED.
utoprimgen.c(1148): (col. 3) remark: LOOP WAS VECTORIZED.
utoprimgen.c(1106): (col. 5) remark: LOOP WAS VECTORIZED.
utoprimgen.c(1045): (col. 3) remark: LOOP WAS VECTORIZED.
utoprimgen.c(1081): (col. 5) remark: LOOP WAS VECTORIZED.
utoprimgen.c(860): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c dudp_calc_3vel.c -lm -lmkl_lapack -lmkl -lguide -lpthread
dudp_calc_3vel.c(48): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc_3vel.c(57): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc_3vel.c(62): (col. 5) remark: LOOP WAS VECTORIZED.
dudp_calc_3vel.c(68): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc_3vel.c(84): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc_3vel.c(88): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c dudp_calc.c -lm -lmkl_lapack -lmkl -lguide -lpthread
dudp_calc.c(86): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc.c(88): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc.c(90): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc.c(90): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc.c(90): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc.c(90): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc.c(92): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc.c(92): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc.c(94): (col. 3) remark: LOOP WAS VECTORIZED.
dudp_calc.c(275): (col. 5) remark: LOOP WAS VECTORIZED.
dudp_calc.c(277): (col. 5) remark: LOOP WAS VECTORIZED.
dudp_calc.c(277): (col. 5) remark: LOOP WAS VECTORIZED.
dudp_calc.c(282): (col. 33) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprim.orig.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprim.orig.c(846): (col. 5) remark: LOOP WAS VECTORIZED.
utoprim.orig.c(611): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim.orig.c(627): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim.orig.c(635): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim.orig.c(285): (col. 10) remark: LOOP WAS VECTORIZED.
utoprim.orig.c(285): (col. 10) remark: LOOP WAS VECTORIZED.
utoprim.orig.c(285): (col. 10) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprim_2d.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprim_2d.c(85): remark #1572: floating-point equality and inequality comparisons are unreliable
  	       i, U_tmp[i], i, U_tmp2[i], i, fabs( (U_tmp[i]-U_tmp2[i]) / ( (U_tmp2[i]!=0.) ? U_tmp2[i] : 1. ) )  ); 
  	                                                                                ^

utoprim_2d.c(248): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( (ret != 0) || (W == FAIL_VAL) ) {
                            ^

utoprim_2d.c(686): remark #1572: floating-point equality and inequality comparisons are unreliable
  	errx  += (x[id]==0.) ?  fabs(dx[id]) : fabs(dx[id]/x[id]);
  	                 ^

utoprim_2d.c(695): remark #1572: floating-point equality and inequality comparisons are unreliable
        if( ( (errx_old == errx) || (errx_oldest == errx) ) && (errx < MIN_NEWT_TOL) )  errx = -errx;
                           ^

utoprim_2d.c(695): remark #1572: floating-point equality and inequality comparisons are unreliable
        if( ( (errx_old == errx) || (errx_oldest == errx) ) && (errx < MIN_NEWT_TOL) )  errx = -errx;
                                                    ^

utoprim_2d.c(50): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(62): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(65): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(71): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(74): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(78): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(93): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(676): (col. 2) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(683): (col. 7) remark: LOOP WAS VECTORIZED.
utoprim_2d.c(704): (col. 7) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprim_1d.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprim_1d.c(252): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( (ret != 0) || (W == FAIL_VAL) ) {
                            ^

utoprim_1d.c(564): remark #1572: floating-point equality and inequality comparisons are unreliable
        if( resid_norm == 0.0 ) resid_norm = 1.0;
                          ^

utoprim_1d.c(681): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  resid_check = (x[id] == 0.) ? 1.0 : fabs(x[id]) ;
  	                          ^

utoprim_1d.c(684): remark #1572: floating-point equality and inequality comparisons are unreliable
  	resid_check = (f == 0.) ? 1.0 : fabs(f) ;
  	                    ^

utoprim_1d.c(708): remark #1572: floating-point equality and inequality comparisons are unreliable
        errx  += (x[id]==0.) ?  fabs(dx[id]) : fabs(dx[id]/x[id]);
                         ^

utoprim_1d.c(718): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( ( (errx_old == errx) || (errx_oldest == errx) ) && (errx <= MIN_NEWT_TOL) )  errx = -errx;
                         ^

utoprim_1d.c(718): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( ( (errx_old == errx) || (errx_oldest == errx) ) && (errx <= MIN_NEWT_TOL) )  errx = -errx;
                                                  ^

utoprim_1d.c(1066): remark #1572: floating-point equality and inequality comparisons are unreliable
      temp= (xold[i] == 0.) ? fabs(p[i]) :  fabs(p[i]/xold[i]);
                        ^

utoprim_1d.c(1119): remark #1572: floating-point equality and inequality comparisons are unreliable
        if (alam == 1.0) {
                    ^

utoprim_1d.c(1133): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if (a == 0.0) tmplam = -slope/(2.0*b);
  	         ^

utoprim_1d.c(1223): remark #111: statement is unreachable
    if( first_call ) {
    ^

utoprim_1d.c(45): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(48): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(55): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(58): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(62): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d.c(87): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprim_1d_opt.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprim_1d_opt.c(269): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( (ret != 0) || (W == FAIL_VAL) ) {
                            ^

utoprim_1d_opt.c(612): remark #1572: floating-point equality and inequality comparisons are unreliable
        if( resid_norm == 0.0 ) resid_norm = 1.0;
                          ^

utoprim_1d_opt.c(726): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  resid_check = (x[id] == 0.) ? 1.0 : fabs(x[id]) ;
  	                          ^

utoprim_1d_opt.c(729): remark #1572: floating-point equality and inequality comparisons are unreliable
  	resid_check = (f == 0.) ? 1.0 : fabs(f) ;
  	                    ^

utoprim_1d_opt.c(751): remark #1572: floating-point equality and inequality comparisons are unreliable
        errx  += (x[id]==0.) ?  fabs(dx[id]) : fabs(dx[id]/x[id]);
                         ^

utoprim_1d_opt.c(760): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( ( (errx_old == errx) || (errx_oldest == errx) ) && (errx <= MIN_NEWT_TOL) )  errx = -errx;
                         ^

utoprim_1d_opt.c(760): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( ( (errx_old == errx) || (errx_oldest == errx) ) && (errx <= MIN_NEWT_TOL) )  errx = -errx;
                                                  ^

utoprim_1d_opt.c(1111): remark #1572: floating-point equality and inequality comparisons are unreliable
      temp= (xold[i] == 0.) ? fabs(p[i]) :  fabs(p[i]/xold[i]);
                        ^

utoprim_1d_opt.c(1159): remark #1572: floating-point equality and inequality comparisons are unreliable
        if (alam == 1.0) {
                    ^

utoprim_1d_opt.c(1171): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if (a == 0.0) tmplam = -slope/(2.0*b);
  	         ^

utoprim_1d_opt.c(52): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(55): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(61): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(64): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(68): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_opt.c(93): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprim_ldz.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprim_ldz.c(404): remark #1572: floating-point equality and inequality comparisons are unreliable
        if(fabs(f)==1E30){
                    ^

utoprim_ldz.c(414): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  if(fabs(f)==1E30){// then physics failure, output data
  	              ^

utoprim_ldz.c(559): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(Wc+Bsq==0.0){
                 ^

utoprim_ldz.c(578): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(1.+ 2. * w1 * (Wc - ee)==0.0){
                                  ^

utoprim_ldz.c(686): remark #1572: floating-point equality and inequality comparisons are unreliable
        if (xl == rts)
                  ^

utoprim_ldz.c(693): remark #1572: floating-point equality and inequality comparisons are unreliable
        if (temp == rts)
                    ^

utoprim_ldz.c(69): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_ldz.c(106): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_ldz.c(110): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_ldz.c(112): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_ldz.c(187): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprim_jon.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprim_jon.c(1029): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( (retval != 0) || (Wp == FAIL_VAL) ) {
                                ^

utoprim_jon.c(1641): remark #111: statement is unreachable
    return(0); // shouldn't get here -- only used if coldgrhd() used
    ^

utoprim_jon.c(1768): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(utsq<UTSQNEGLIMIT || utsq!=utsq){ // also checks if nan
                                  ^

utoprim_jon.c(1776): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(p_tmp!=p_tmp || result!=result) result=-VERYBIG; // indicates still problem
                ^

utoprim_jon.c(1776): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(p_tmp!=p_tmp || result!=result) result=-VERYBIG; // indicates still problem
                                 ^

utoprim_jon.c(1802): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(utsq<UTSQNEGLIMIT || utsq!=utsq){ // also checks for nan
                                  ^

utoprim_jon.c(1814): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || result!=result) result=0.0; // indicates still problem
               ^

utoprim_jon.c(1814): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || result!=result) result=0.0; // indicates still problem
                            ^

utoprim_jon.c(1814): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || result!=result) result=0.0; // indicates still problem
                                        ^

utoprim_jon.c(1814): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || result!=result) result=0.0; // indicates still problem
                                                      ^

utoprim_jon.c(1814): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || result!=result) result=0.0; // indicates still problem
                                                                       ^

utoprim_jon.c(1839): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(utsq<UTSQNEGLIMIT || utsq!=utsq){
                                  ^

utoprim_jon.c(1847): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(p_tmp!=p_tmp || result!=result) result=0.0; // indicates still problem
                ^

utoprim_jon.c(1847): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(p_tmp!=p_tmp || result!=result) result=0.0; // indicates still problem
                                 ^

utoprim_jon.c(1877): remark #1572: floating-point equality and inequality comparisons are unreliable
    if(utsq<UTSQNEGLIMIT || utsq!=utsq){
                                  ^

utoprim_jon.c(1892): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || p_tmp!=p_tmp || result!=result) result=0.0; // indicates still problem
               ^

utoprim_jon.c(1892): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || p_tmp!=p_tmp || result!=result) result=0.0; // indicates still problem
                            ^

utoprim_jon.c(1892): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || p_tmp!=p_tmp || result!=result) result=0.0; // indicates still problem
                                        ^

utoprim_jon.c(1892): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || p_tmp!=p_tmp || result!=result) result=0.0; // indicates still problem
                                                      ^

utoprim_jon.c(1892): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || p_tmp!=p_tmp || result!=result) result=0.0; // indicates still problem
                                                                      ^

utoprim_jon.c(1892): remark #1572: floating-point equality and inequality comparisons are unreliable
      if(dvsq!=dvsq || dp1!=dp1 || dp2!=dp2 || dpdWp!=dpdWp || p_tmp!=p_tmp || result!=result) result=0.0; // indicates still problem
                                                                                       ^

utoprim_jon.c(3230): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( resid_norm == 0.0 ) resid_norm = 1.0;
  	                  ^

utoprim_jon.c(3313): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  resid_check = (x[id] == 0.) ? 1.0 : fabs(x[id]) ;
  	                          ^

utoprim_jon.c(3316): remark #1572: floating-point equality and inequality comparisons are unreliable
  	resid_check = (f == 0.) ? 1.0 : fabs(f) ;
  	                    ^

utoprim_jon.c(3348): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  if(resid[id] <=-VERYBIG || jac[0][id]==0.0 ){ // then went too far such that v^2<0 or \tilde{u}^2<0	    
  	                                         ^

utoprim_jon.c(3366): remark #1572: floating-point equality and inequality comparisons are unreliable
  	    if(resid[id] <=-VERYBIG || jac[0][id]==0.0 ){ // then went too far such that v^2<0 or \tilde{u}^2<0	    
  	                                           ^

utoprim_jon.c(3419): remark #1572: floating-point equality and inequality comparisons are unreliable
      errx  = (wglobal[0]==0.) ?  fabs(dx_old[0]) : fabs(dx_old[0]/MAX(fabs(wglobal[0]),fabs(x[0])));
                           ^

utoprim_jon.c(3745): remark #1572: floating-point equality and inequality comparisons are unreliable
      temp= (xold[i] == 0.) ? fabs(p[i]) :  fabs(p[i]/xold[i]);
                        ^

utoprim_jon.c(3805): remark #1572: floating-point equality and inequality comparisons are unreliable
        if (alam == 1.0) {
                    ^

utoprim_jon.c(3818): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if (a == 0.0) tmplam = -slope/(2.0*b);
  	         ^

utoprim_jon.c(240): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(252): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(255): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(650): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(668): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(804): (col. 5) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(1200): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(1343): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(1412): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(1420): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(1424): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_jon.c(1452): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprim_1d_final.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprim_1d_final.c(298): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( (retval != 0) || (W == FAIL_VAL) ) {
                               ^

utoprim_1d_final.c(625): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( resid_norm == 0.0 ) resid_norm = 1.0;
  	                  ^

utoprim_1d_final.c(709): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  resid_check = (x[id] == 0.) ? 1.0 : fabs(x[id]) ;
  	                          ^

utoprim_1d_final.c(712): remark #1572: floating-point equality and inequality comparisons are unreliable
  	resid_check = (f == 0.) ? 1.0 : fabs(f) ;
  	                    ^

utoprim_1d_final.c(757): remark #1572: floating-point equality and inequality comparisons are unreliable
      errx  = (x[0]==0.) ?  fabs(dx[0]) : fabs(dx[0]/x[0]);
                     ^

utoprim_1d_final.c(1100): remark #1572: floating-point equality and inequality comparisons are unreliable
      temp= (xold[i] == 0.) ? fabs(p[i]) :  fabs(p[i]/xold[i]);
                        ^

utoprim_1d_final.c(1158): remark #1572: floating-point equality and inequality comparisons are unreliable
        if (alam == 1.0) {
                    ^

utoprim_1d_final.c(1171): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if (a == 0.0) tmplam = -slope/(2.0*b);
  	         ^

utoprim_1d_final.c(90): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d_final.c(95): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d_final.c(98): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_1d_final.c(102): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_final.c(102): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_final.c(102): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_final.c(102): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_final.c(102): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_final.c(102): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_1d_final.c(102): (col. 9) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprim_2d_final.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprim_2d_final.c(323): remark #1572: floating-point equality and inequality comparisons are unreliable
    if( (retval != 0) || (W == FAIL_VAL) ) {
                               ^

utoprim_2d_final.c(824): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( resid_norm == 0.0 ) resid_norm = 1.0;
  	                  ^

utoprim_2d_final.c(906): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  resid_check = (x[id] == 0.) ? 1.0 : fabs(x[id]) ;
  	                          ^

utoprim_2d_final.c(909): remark #1572: floating-point equality and inequality comparisons are unreliable
  	resid_check = (f == 0.) ? 1.0 : fabs(f) ;
  	                    ^

utoprim_2d_final.c(938): remark #1572: floating-point equality and inequality comparisons are unreliable
      errx  = (x[0]==0.) ?  fabs(dx[0]) : fabs(dx[0]/x[0]);
                     ^

utoprim_2d_final.c(1406): remark #1572: floating-point equality and inequality comparisons are unreliable
      temp= (xold[i] == 0.) ? fabs(p[i]) :  fabs(p[i]/xold[i]);
                        ^

utoprim_2d_final.c(1466): remark #1572: floating-point equality and inequality comparisons are unreliable
        if (alam == 1.0) {
                    ^

utoprim_2d_final.c(1479): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if (a == 0.0) tmplam = -slope/(2.0*b);
  	         ^

utoprim_2d_final.c(85): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(97): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(100): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(104): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(104): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(104): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(104): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(104): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(104): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(104): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(834): (col. 7) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(841): (col. 7) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(1003): (col. 5) remark: LOOP WAS VECTORIZED.
utoprim_2d_final.c(1404): (col. 3) remark: LOOP WAS VECTORIZED.
mpicc -cc=icc -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1 -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c utoprim_5d2_final.c -lm -lmkl_lapack -lmkl -lguide -lpthread
utoprim_5d2_final.c(249): remark #1572: floating-point equality and inequality comparisons are unreliable
      residnorm = (residnorm == 0.) ? 1. : 1./residnorm;
                                ^

utoprim_5d2_final.c(432): remark #1572: floating-point equality and inequality comparisons are unreliable
      normret = ( normret == 0. )  ?  1.  : 1./normret;
                             ^

utoprim_5d2_final.c(516): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( absmax == 0. ) { 
                    ^

utoprim_5d2_final.c(592): remark #1572: floating-point equality and inequality comparisons are unreliable
        if( (j == (n-2)) && (A[j][j+1] == 0.) ) {
                                          ^

utoprim_5d2_final.c(623): remark #1572: floating-point equality and inequality comparisons are unreliable
      if( A[j][j] == 0. ) { 
                     ^

utoprim_5d2_final.c(820): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if( resid_norm == 0.0 ) resid_norm = 1.0;
  	                  ^

utoprim_5d2_final.c(903): remark #1572: floating-point equality and inequality comparisons are unreliable
  	  resid_check = (x[id] == 0.) ? 1.0 : fabs(x[id]) ;
  	                          ^

utoprim_5d2_final.c(906): remark #1572: floating-point equality and inequality comparisons are unreliable
  	resid_check = (f == 0.) ? 1.0 : fabs(f) ;
  	                    ^

utoprim_5d2_final.c(936): remark #1572: floating-point equality and inequality comparisons are unreliable
      errx  = (W==0.) ?  fabs(W-W_old) : fabs((W-W_old)/W);
                  ^

utoprim_5d2_final.c(1126): remark #1572: floating-point equality and inequality comparisons are unreliable
      temp= (xold[i] == 0.) ? fabs(p[i]) :  fabs(p[i]/xold[i]);
                        ^

utoprim_5d2_final.c(1178): remark #1572: floating-point equality and inequality comparisons are unreliable
        if (alam == 1.0) {
                    ^

utoprim_5d2_final.c(1191): remark #1572: floating-point equality and inequality comparisons are unreliable
  	if (a == 0.0) tmplam = -slope/(2.0*b);
  	         ^

utoprim_5d2_final.c(407): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(408): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(430): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(98): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(98): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(98): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(98): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(98): (col. 9) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(174): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(179): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(180): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(245): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(273): (col. 5) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(287): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(287): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(638): (col. 7) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(1120): (col. 5) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(1124): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(766): (col. 3) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(806): (col. 5) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(830): (col. 7) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(837): (col. 7) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(902): (col. 2) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(935): (col. 5) remark: LOOP WAS VECTORIZED.
utoprim_5d2_final.c(996): (col. 5) remark: LOOP WAS VECTORIZED.
mpicc -cc=gcc -Wall -O2 -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -Wall -O2 -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c freespace.c -lm  -lmkl_lapack -lmkl -lguide -lpthread
In file included from global.loops.h:16,
                 from global.general.h:77,
                 from global.grmhd.h:5,
                 from decs.h:1,
                 from freespace.c:1:
global.loops.diagnostics.h:50:3: warning: multi-line comment
gcc: -lm: linker input file unused because linking not done
gcc: -lmkl_lapack: linker input file unused because linking not done
gcc: -lmkl: linker input file unused because linking not done
gcc: -lguide: linker input file unused because linking not done
gcc: -lpthread: linker input file unused because linking not done
gcc: -lm: linker input file unused because linking not done
gcc: -lmkl_lapack: linker input file unused because linking not done
gcc: -lmkl: linker input file unused because linking not done
gcc: -lguide: linker input file unused because linking not done
gcc: -lpthread: linker input file unused because linking not done
mpicc -cc=gcc -Wall -O2 -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -Wall -O2 -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -c tau_neededbyharm.c -lm
gcc: -lm: linker input file unused because linking not done
gcc: -lm: linker input file unused because linking not done
mpicc -cc=icc -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1     -O2 -finline -finline-functions -ip -fno-alias -unroll -openmp -Wall -Wcheck -Wshadow -w2 -wd=1419,869,177,310,593,810,981,1418 -DUSINGICC=1  -DUSINGORANGE=0 -DUSINGMPI=1 -DUSINGMPIAVOIDFORK=0 -DUSINGLAPACK=1 -o grmhd init.o init.tools.o initbase.o initbase.boundloop.o  initbase.enerregions.o initbase.tools.o initbase.gridsectioning.o restart.o restart.checks.o set_arrays.o set_arrays_perpoint_perline.o set_arrays_multidimen.o mpi_set_arrays.o set_grid.o advance.o reconstructeno.o paraenohybrid.o flux.o  flux.mergedc2ea2cmethod.o higherorder_pointavg.o wavespeeds.o boundsflux.o fluxct.o fluxctstag.o fluxcompute.o fluxvpot.o bounds.o bounds.tools.o boundsint.o diag.o dump.o dumpgen.o dump_ener.o image.o fail.o fixup.o mpi_init.o mpi_init_grmhd.o  mpi_fileio.o mpi_fprintfs.o boundmpi.o boundmpiint.o mpi_grmhd_grray_liaison.o interppoint.o interppoint.para.o interpline.o interpline.para.o interpline.mono.o interpline.jmono.o interpline.smono.o  main.o mytime.o metric.o metric_tools.o math_tools.o metric_selfgravity_or_evolvemetric.o coord.o phys.o phys.tools.o step_ch.o phys.ffde.o phys.coldgrmhd.o eos.o vchar.o transforms.o sources.o rescale_interp.o gaussj.o lubksb.o ludcmp.o mnewt.o nrutil.o ranc.o tensor.o tetrad.o utoprimgen.o dudp_calc_3vel.o dudp_calc.o utoprim.orig.o utoprim_2d.o utoprim_1d.o utoprim_1d_opt.o utoprim_ldz.o utoprim_jon.o utoprim_1d_final.o utoprim_2d_final.o utoprim_5d2_final.o freespace.o tau_neededbyharm.o -lm  -lmkl_lapack -lmkl -lguide -lpthread
